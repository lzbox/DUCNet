# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs
fusion_mode: bifpn
node_mode: CSP_MSCB
head_channel: 512

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, CSP_DCAConv, [256, 4]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, CSP_DCAConv, [512, 4]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, CSP_DCAConv, [512, 4]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, CSP_DCAConv, [1024, 4]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10

# YOLO11n head
head:
  - [10, 1, Conv, [head_channel]]  #11-P5/32

  - [6, 1, Conv, [head_channel, 3, 2]] #12-P5/32
  - [[-1, 11], 1, Fusion, [fusion_mode]] #13
  - [-1, 3, node_mode, [head_channel, [5,7,9]]] #14-P5/32

  - [-1, 1, EUCB, []] #15-P4/16
  - [4, 1, Conv, [head_channel, 3, 2]] #16-P4/16
  - [[-1, -2, 6], 1, Fusion, [fusion_mode]] #17
  - [-1, 3, node_mode, [head_channel, [3,5,7]]] #18-P4/16

  - [-1, 1, EUCB, []] #19-P3/8
  - [2, 1, Conv, [head_channel, 3, 2]] #20-P3/8
  - [[-1, -2, 4], 1, Fusion, [fusion_mode]] #21
  - [-1, 3, node_mode, [head_channel, [1,3,5]]] #22-P3/8

  - [[19, -1], 1, Fusion, [fusion_mode]] #23
  - [-1, 3, node_mode, [head_channel, [1,3,5]]] #24-P3/8

  - [22, 1, Conv, [head_channel, 3, 2]] #25-P4/16
  - [24, 1, Conv, [head_channel, 3, 2]] #26-P4/16
  - [[-1, -2, 18, 15], 1, Fusion, [fusion_mode]] #27-P4/16
  - [-1, 3, node_mode, [head_channel, [3,5,7]]] #28-P4/16

  - [18, 1, Conv, [head_channel, 3, 2]] #29-P5/32
  - [28, 1, Conv, [head_channel, 3, 2]] #30-P5/32
  - [[-1, -2, 14], 1, Fusion, [fusion_mode]] #31-P5/32
  - [-1, 3, node_mode, [head_channel, [5,7,9]]] #32-P5/32

  - [[24, 28, 32], 1, Detect_TADDH, [nc, 512]] #33 Detect(P3, P4, P5)
